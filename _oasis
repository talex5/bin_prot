OASISFormat:      0.3
OCamlVersion:     >= 4.00.0
FindlibVersion:   >= 1.3.2
Name:             bin_prot
Version:          111.03.00
Synopsis:         bin_prot - binary protocol generator
Authors:          Jane Street Capital LLC <opensource@janestreet.com>
Copyrights:       (C) 2008-2013 Jane Street Capital LLC <opensource@janestreet.com>
Maintainers:      Jane Street Capital LLC <opensource@janestreet.com>
License:          Apache-2.0
LicenseFile:      LICENSE.txt
Homepage:         https://github.com/janestreet/bin_prot
Plugins:          StdFiles (0.3), DevFiles (0.3), META (0.3)
XStdFilesAUTHORS: false
XStdFilesREADME:  false
BuildTools:       ocamlbuild, camlp4o

Plugins:          StdFiles (0.3), DevFiles (0.3), META (0.3)
XStdFilesAUTHORS: false
XStdFilesREADME:  false

PostConfCommand: config/arch.sh $ocamlc
PreBuildCommand: mkdir -p _build; cp lib/*.mlh _build/

Flag xen
  Description:        Build Xen support
  Default:            false

Library bin_prot
  Path:               lib
  Pack:               true
  Modules:            Binable,
                      Nat0,
                      Common,
                      Size,
                      Write,
                      Read,
                      Std,
                      Type_class,
                      Utils
  CSources:           blit_stubs.c
  BuildDepends:       unix,bigarray
  XMETAExtraLines:    xen_linkopts = "-lbin_prot_xen_stubs"

Library bin_prot_xen
  Build$:             flag(xen)
  Path:               lib
  CSources:           blit_stubs_xen.c
  Findlibparent:      bin_prot
  Findlibname:        xen
  CCOpt:              -O2 $XEN_CFLAGS

Library pa_bin_prot
  Path:               syntax
  FindlibName:        syntax
  FindlibParent:      bin_prot
  Modules:            Pa_bin_prot
  BuildDepends:       camlp4.quotations,camlp4.extend,type_conv (>= 3.0.5)
  XMETAType:          syntax
  XMETARequires:      camlp4,type_conv,bin_prot
  XMETADescription:   Syntax extension for binary protocol generator

Executable test_runner
  Path:               lib_test
  MainIs:             test_runner.ml
  Build$:             flag(tests)
  Install:            false
  CompiledObject:     best
  Custom:             true
  BuildDepends:       bin_prot,bin_prot.syntax,oUnit (>= 1.0.2)

Test test_runner
  Run$:               flag(tests)
  Command:            $test_runner
  WorkingDirectory:   lib_test

Executable mac_test
  Path:               lib_test
  MainIs:             mac_test.ml
  Build$:             flag(tests)
  Install:            false
  Custom:             true
  CompiledObject:     best
  BuildDepends:       bin_prot,bin_prot.syntax

Test mac_test
  Run$:               flag(tests)
  Command:            $mac_test
  WorkingDirectory:   lib_test

Executable example
  Path:               lib_test
  MainIs:             example.ml
  Build$:             flag(tests)
  Install:            false
  CompiledObject:     best
  BuildDepends:       bin_prot,bin_prot.syntax
